<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="www.zhizunbao.mapper.manage.RoleMapper" >
  <resultMap id="BaseResultMap" type="www.zhizunbao.dto.manage.Role" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Apr 15 19:00:57 CST 2018.
    -->
    <id column="role_id" property="roleId" jdbcType="INTEGER" />
    <result column="role_name" property="roleName" jdbcType="VARCHAR" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="res_name" property="resName" jdbcType="VARCHAR" />
    <result column="role_content" property="roleContent" jdbcType="VARCHAR" /> 
  <collection  property="manage"  ofType="www.zhizunbao.dto.manage.Manage">
            <id property="manageId" column="manage_id" />
            <result property="username" column="username" />    
   </collection>
  <collection  property="resources"  ofType="www.zhizunbao.dto.manage.Resources">
            <id property="resId" column="res_id" />
            <result property="resName" column="res_name" />    
   </collection>
  </resultMap>
  
  <sql id="Base_Column_List" >
    role_id, role_name, role_content
  </sql>
  
  <select id="findMoreList" resultMap="BaseResultMap">
  SELECT ma.real_name,res.res_name,ro.role_name  FROM manage ma JOIN manage_role_rel ml ON ma.manage_id=ml.manage_id JOIN role ro ON ml.role_id=ro.role_id JOIN role_res_rel rol ON ro.role_id=rol.role_id JOIN resources res ON rol.res_id=res.res_id WHERE ro.role_id =#{roleId,jdbcType=INTEGER}
  </select>
  
  <!-- <select id="findUsersList" resultMap="BaseResultMap">
  SELECT ro.role_id,ro.role_name,res.res_name,ma.username,ro.role_content  FROM manage ma JOIN manage_role_rel ml ON ma.manage_id=ml.manage_id JOIN role ro ON ml.role_id=ro.role_id JOIN role_res_rel rol ON ro.role_id=rol.role_id JOIN resources res ON rol.res_id=res.res_id 
  </select> -->
  
  <select id="findByCount" resultType="Integer">
  SELECT COUNT(1) FROM role
  </select>
  
  <select id="findUsersList" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
     SELECT 
            * 
        FROM 
            role b
        INNER JOIN  
            manage_role_rel m
        ON
            b.role_id=m.role_id
        INNER JOIN
            manage c
        ON
            m.manage_id=c.manage_id
        INNER JOIN  
            role_res_rel r
        ON
            b.role_id=r.role_id
        INNER JOIN
            resources s
        ON
            s.res_id=r.res_id
  </select>
  
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from role
    where role_id = #{roleId,jdbcType=INTEGER}
  </delete>
  
  <insert id="insert" parameterType="www.zhizunbao.dto.manage.Role" >
    insert into role (role_id, role_name, role_content)
    values (#{roleId,jdbcType=INTEGER}, #{roleName,jdbcType=VARCHAR}, #{roleContent,jdbcType=VARCHAR} )
  </insert>
  
  
  <insert id="insertSelective" parameterType="www.zhizunbao.dto.manage.Role" >
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="roleName != null" >
        role_name,
      </if>
      <if test="roleContent != null" >
        role_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="roleName != null" >
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleContent != null" >
        #{roleContent,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  
  
  <update id="updateByPrimaryKeySelective" parameterType="www.zhizunbao.dto.manage.Role" >
    update role
    <set >
      <if test="roleName != null" >
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleContent != null" >
        role_content = #{roleContent,jdbcType=VARCHAR},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=INTEGER}
  </update>
  
  
  <update id="updateByPrimaryKey" parameterType="www.zhizunbao.dto.manage.Role" >
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      role_content = #{roleContent,jdbcType=VARCHAR}
    where role_id = #{roleId,jdbcType=INTEGER}
  </update>
</mapper>