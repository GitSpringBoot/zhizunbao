package www.zhizunbao.controller;

import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.multipart.MultipartFile;

import www.zhizunbao.dto.claim.UserApply;
import www.zhizunbao.dto.manage.UserInfo;
import www.zhizunbao.service.ClaimRuleService;
import www.zhizunbao.service.UserApplyService;
import www.zhizunbao.service.UserInfoService;
import www.zhizunbao.utils.Base64Util;
import www.zhizunbao.utils.FilesUtils;
import www.zhizunbao.utils.MD5Util;
import www.zhizunbao.utils.StringUtils;

@Controller
@RequestMapping("/userInfo/")
public class UserInfoController {

	@Autowired
	private UserInfoService userInfoService;
	@Autowired
	private ClaimRuleService claimRuleService;
	@Autowired
	private UserApplyService userApplyService;
	
	/**
	 * 
	 * JiJi  2018年4月20日 上午11:41:35
	 * 功能 ： 前台用户登录
	 * @return
	 * @throws IOException 
	 * @throws ServletException 
	 */
	@RequestMapping("userLogin")
	public String userLogin(HttpServletRequest request,UserInfo userInfo,HttpServletResponse response) throws IOException, ServletException{
		UserInfo userInfo1 = userInfoService.findUserByUserName(userInfo);
		HttpSession session = request.getSession();
		request.setAttribute("msg", "");
		if(null==userInfo1){
			request.setAttribute("msg", "此用户不存在");
			return "front/login";
		}else {
			if(Base64Util.encode(MD5Util.MD5(userInfo.getUserPassword())).equals(userInfo1.getUserPassword())){
				SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
				String loginTime = format.format(new Date());
				userInfo1.setLoginTime(loginTime);
				userInfoService.updateUserInfo(userInfo1);
				session.setAttribute("userInfo1", userInfo1);
				String oldURL = (String) session.getAttribute("oldURL");
				if (null!=oldURL && !"".equals(oldURL) && !"userInfo/undefined?".equals(oldURL)) {
					return "redirect:/"+oldURL;
				}else{
					return "redirect:toUserinfoInsure";
				}
			}else {
				request.setAttribute("msg", "密码不正确");
				return "front/login";
			}
		}
	}
	/**
	 * 
	 * JiJi  2018年4月20日 下午7:42:07
	 * 功能 ：注销用户登录
	 * @param request
	 * @param response
	 * @throws IOException
	 */
	@RequestMapping("userInvalidate")
	public String userInvalidate(HttpServletRequest request,HttpServletResponse response) throws IOException{
		request.getSession().invalidate();
		return "redirect:toUserLogin";
	}
	/**
	 * 
	 * JiJi  2018年4月20日 下午8:02:26
	 * 功能 ：用户注册
	 * @param userInfo
	 * @throws IOException 
	 */
	@RequestMapping("userRegister")
	public String userRegister(UserInfo userInfo,HttpServletResponse response,HttpServletRequest request) throws IOException{
		System.out.println("注册的密码为"+userInfo.getUserPassword());
		userInfo.setUserPassword(Base64Util.encode(MD5Util.MD5(userInfo.getUserPassword())));
		UserInfo userInfo2 = userInfoService.findUserByUserName(userInfo);
		if(userInfo2!=null){
			request.getSession().setAttribute("msg1", "此用户名已被注册！");
			return "front/register";
		}else {
			userInfo.setUserStatus(0);
			SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
			String regTime = format.format(new Date());
			userInfo.setUserRegtime(regTime);
			String uuid = StringUtils.getUUID();
			userInfo.setUserClinumber(uuid);
			userInfo.setUserStatus(0);
			userInfo.setUserMsg(0);
			userInfoService.userRegister(userInfo);
			return "front/login";
		}
	}
	/**
	 * 
	 * JiJi  2018年4月22日 下午9:27:47
	 * 功能 ：跳转到登录界面
	 * @return
	 */
	@RequestMapping("toUserLogin")
	public String toUserLogin(){
		return "front/login";
	}
	/**
	 * 
	 * JiJi  2018年4月22日 下午9:27:47
	 * 功能 ：跳转到登录界面
	 * @return
	 */
	@RequestMapping("toUserRegister")
	public String toUserRegister(){
		return "front/register";
	}
	/**
	 * 
	 * 高孟圆
	 * 功能 ：去用户理赔页面
	 * @param userInfo
	 * @throws IOException 
	 */
	@RequestMapping("userInfoClaims")
	public String userInfoClaims(HttpServletRequest request,ModelMap map) {
		UserInfo userInfo = (UserInfo) request.getSession().getAttribute("userInfo1");
		if(null!=userInfo){
			map.put("userInsure", userInfoService.findUserInsure(userInfo.getUserId()));
		}
		return "front/userinfo/userinfo_claims";
	}
	/**
	 * 
	 * 高孟圆
	 * 功能 ：去添加理赔页面
	 * @param userInfo
	 * @throws IOException 
	 */
	@RequestMapping("toAddUserInfoClaims")
	public String toAddUserInfoClaims(int id,ModelMap map) {
		map.put("claimRule", claimRuleService.findRulesOfClaim());
		map.put("userInsure", userInfoService.userInfoClaims(id));   
		return "front/userinfo/userinfo_addClaims";
	}	
	/**
	 * 
	 * 高孟圆
	 * 功能 ：添加理赔
	 * @param userInfo
	 * @throws IOException 
	 */
	@RequestMapping("addUserInfoClaim")
	public String addUserInfoClaims(MultipartFile imagefile,HttpServletRequest request,UserApply userApply) {
			String imgUrl = FilesUtils.FilesUpload_xm(request, imagefile, "/upload");
			userApplyService.uploadImg(imgUrl,userApply);
			
		return "readirect:/userinfo/toAddUserInfoClaims";
	}
	/**
	 * 
	 * 高孟圆
	 * 功能 ：用户保险详情
	 * @param userInfo
	 * @throws IOException 
	 */
	@RequestMapping("toUserinfoInsure")
	public String toUserinfoInsure(HttpServletRequest request,ModelMap map) {
		UserInfo userInfo = (UserInfo) request.getSession().getAttribute("userInfo1");
		if(null!=userInfo){
			map.put("userInsure", userInfoService.findUserInsure(userInfo.getUserId()));
		}
		return "front/userinfo/userinfoInsure_list";
	}
	/**
	 * 
	 * 高孟圆
	 * 功能 ：查看保险详情
	 * @param userInfo
	 * @throws IOException 
	 */
	/*@RequestMapping("insureDetails")
	public void insureDetails(int id,UserInfo userInfo,HttpServletRequest request,HttpServletResponse response) throws Exception {
		
		userInfo = userInfoService.insureDetails(id);
		HashMap<String, Object> map = new HashMap<String, Object>();
		map.put("userInfo", userInfo);
		FMUtils.createHtml(request, "insureDetails.ftl", "insureDetails.html", map);
		
		response.sendRedirect("/zhizunbao/html/insureDetails.html");
	}*/
	/**
	 * 
	 * 高孟圆
	 * 功能 ：用户个人消息
	 * @param userInfo
	 * @throws IOException 
	 */
	@RequestMapping("toUserinfoMessage")
	public String toUserinfoManage(HttpServletRequest request,ModelMap map) {
		UserInfo userInfo = (UserInfo) request.getSession().getAttribute("userInfo1");
		if(null!=userInfo){
			map.put("userInsure", userInfoService.findUserInsure(userInfo.getUserId()));
		}
		return "front/userinfo/userinfo_message";
	}
	/**
	 * 
	 * 高孟圆
	 * 功能 ：去修改信息页面
	 * @param userInfo
	 * @throws IOException 
	 */
	@RequestMapping("toUserinfoUpdate")
	public String toUserinfoUpd(HttpServletRequest request,ModelMap map) {
		UserInfo userInfo = (UserInfo) request.getSession().getAttribute("userInfo1");
		if(null!=userInfo){
			Object object = userInfoService.selectByPrimaryKey(userInfo.getUserId());
			map.put("userInfo", object);
		}
		return "front/userinfo/userinfo_upd";
	}
	/**
	 * 
	 * 高孟圆
	 * 功能 ：修改信息
	 * @param userInfo
	 * @throws IOException 
	 */

	@RequestMapping("updateUserInfo")
	public String updUserInfo(UserInfo userInfo) {
			 userInfoService.updateUserInfo(userInfo);
		    return "redirect:toUserinfoInsure";
	}

	/**
	 * 
	 * 高孟圆
	 * 功能 ：去修改密码
	 * @param userInfo
	 * @throws IOException 
	 */
	@RequestMapping("toUpdateUserPassword")
	public String toUpdateUserPassword(HttpServletRequest request,ModelMap map) {
		UserInfo userInfo = (UserInfo) request.getSession().getAttribute("userInfo1");
		map.put("userInfo", userInfo);
		return "front/userinfo/userinfo_updatePassword";
	}
	/**
	 * 
	 * 高孟圆
	 * 功能 ：修改密码
	 * @param userInfo
	 * @throws IOException 
	 */
	@RequestMapping("updateUserPassword")
	public String updateUserPassword(HttpServletRequest request,UserInfo userInfo) {
		UserInfo userInfo1 = (UserInfo) request.getSession().getAttribute("userInfo1");
		if(userInfo.getUserPassword()==null){
			userInfo.setUserPassword(userInfo1.getUserPassword());
			userInfo.setUserPassword(Base64Util.encode(MD5Util.MD5(userInfo.getUserPassword())));
			 userInfoService.updateUserPassword(userInfo);
		}
		return "redirect:toUserinfoInsure";
	}
	/**
	 * 
	 * 高孟圆
	 * 功能 ：去个人积分页面
	 * @param userInfo
	 * @throws IOException 
	 */
	
	@RequestMapping("toUserDiscounts")
	public String toUserDiscounts(HttpServletRequest request,ModelMap map) {
		UserInfo userInfo = (UserInfo) request.getSession().getAttribute("userInfo1");
		if(null!=userInfo){
			List<UserInfo> userDiscounts= userInfoService.findUserDiscounts(userInfo.getUserId());
			map.put("userDiscounts", userDiscounts);
		}
		return "front/userinfo/userinfo_discounts";
	}
}
